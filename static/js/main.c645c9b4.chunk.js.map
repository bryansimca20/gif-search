{"version":3,"sources":["Components/SearchForm.js","Components/Gif.js","Components/NoGifs.js","Components/GifList.js","App.js","index.js"],"names":["SearchForm","state","searchText","onSearchChange","e","setState","target","value","handleSubmit","preventDefault","props","onSearch","query","currentTarget","reset","className","onSubmit","this","htmlFor","type","onChange","name","ref","input","placeholder","id","Component","Gif","src","url","alt","NoGifs","GifList","gifs","results","data","length","map","gif","images","fixed_height","key","App","performSearch","axios","get","then","response","catch","err","console","log","loading","ReactDOM","render","document","getElementById"],"mappings":"wQAEqBA,E,4MAEnBC,MAAQ,CACNC,WAAY,I,EAGdC,eAAiB,SAAAC,GACf,EAAKC,SAAS,CAAEH,WAAYE,EAAEE,OAAOC,S,EAGvCC,aAAe,SAAAJ,GACbA,EAAEK,iBACF,EAAKC,MAAMC,SAAS,EAAKC,MAAML,OAC/BH,EAAES,cAAcC,S,uDAGR,IAAD,OACP,OACE,0BAAMC,UAAU,cAAcC,SAAUC,KAAKT,cAC3C,2BAAOO,UAAU,YAAYG,QAAQ,UAArC,UACA,2BAAOC,KAAK,SACLC,SAAUH,KAAKd,eACfkB,KAAK,SACLC,IAAK,SAACC,GAAD,OAAW,EAAKX,MAAQW,GAC7BC,YAAY,cACnB,4BAAQL,KAAK,SAASM,GAAG,SAASV,UAAU,iBAAgB,uBAAGA,UAAU,6BAAb,gB,GAzB5BW,aCMzBC,EANH,SAAAjB,GAAK,OACf,wBAAIK,UAAU,YACZ,yBAAKa,IAAKlB,EAAMmB,IAAKC,IAAI,OCKdC,EAPA,SAAArB,GAAK,OAClB,wBAAIK,UAAU,WACZ,uBAAGA,UAAU,2BAAb,+BACA,mECqBWiB,EAtBC,SAAAtB,GAEd,IACIuB,EADEC,EAASxB,EAAMyB,KAarB,OAVEF,EADEC,EAAQE,OAAS,EACZF,EAAQG,KAAI,SAAAC,GAAG,OACpB,kBAAC,EAAD,CACET,IAAOS,EAAIC,OAAOC,aAAaX,IAC/BY,IAAOH,EAAIb,QAIR,kBAAC,EAAD,MAIP,wBAAIV,UAAU,YACXkB,ICfcS,E,kDAEnB,aAAe,IAAD,8BACZ,gBAoBFC,cAAgB,SAAC/B,GACfgC,IAAMC,IAAN,gDAAmDjC,EAAnD,oCACGkC,MAAK,SAAAC,GACJ,EAAK1C,SAAS,CACZ4B,KAAMc,EAASZ,KAAKA,UAGvBa,OAAM,SAAAC,GACLC,QAAQC,IAAI,kCAAoCF,OA3BpD,EAAKhD,MAAQ,CACXgC,KAAM,GACNmB,SAAS,GAJC,E,gEAQO,IAAD,OAClBR,IAAMC,IAAI,+DACPC,MAAK,SAAAC,GACJ,EAAK1C,SAAS,CACZ4B,KAAMc,EAASZ,KAAKA,KACpBiB,SAAS,OAGZJ,OAAM,SAAAC,GACLC,QAAQC,IAAI,kCAAoCF,Q,+BAkBpD,OADAC,QAAQC,IAAIlC,KAAKhB,MAAMgC,MAErB,6BACE,yBAAKlB,UAAU,eACb,yBAAKA,UAAU,SACb,wBAAIA,UAAU,cAAd,aACA,kBAAC,EAAD,CACEJ,SAAYM,KAAK0B,kBAIvB,yBAAK5B,UAAU,gBAEVE,KAAKhB,MAAMmD,QACV,4CACA,kBAAC,EAAD,CACCjB,KAAQlB,KAAKhB,MAAMgC,a,GApDDP,aCFjC2B,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.c645c9b4.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nexport default class SearchForm extends Component {\n\n  state = {\n    searchText: ''\n  }\n\n  onSearchChange = e => {\n    this.setState({ searchText: e.target.value });\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.onSearch(this.query.value)\n    e.currentTarget.reset();\n  }\n\n  render() {\n    return (\n      <form className=\"search-form\" onSubmit={this.handleSubmit} >\n        <label className=\"is-hidden\" htmlFor=\"search\">Search</label>\n        <input type=\"search\"\n               onChange={this.onSearchChange}\n               name=\"search\"\n               ref={(input) => this.query = input}\n               placeholder=\"Search...\" />\n        <button type=\"submit\" id=\"submit\" className=\"search-button\"><i className=\"material-icons icn-search\">search</i></button>\n      </form>\n    );\n  }\n}\n","import React from 'react';\n\nconst Gif = props => (\n  <li className=\"gif-wrap\">\n    <img src={props.url} alt=\"\"/>\n  </li>\n);\n\nexport default Gif;\n","import React from 'react';\n\nconst NoGifs = props => (\n  <li className='no-gifs'>\n    <i className=\"material-icons icon-gif\">sentiment_very_dissatisfied</i>\n    <h3>Sorry, no GIFs match your search.</h3>\n  </li>\n);\n\nexport default NoGifs;","import React from 'react';\nimport Gif from './Gif';\nimport NoGifs from './NoGifs'\n\nconst GifList = props => {\n\n  const results= props.data;\n  let gifs;\n  if (results.length > 0) {\n    gifs = results.map(gif =>\n      <Gif\n        url = {gif.images.fixed_height.url}\n        key = {gif.id}\n      />\n    )\n  } else {\n    gifs = <NoGifs />\n  }\n\n  return(\n    <ul className=\"gif-list\">\n      {gifs}\n    </ul>\n  );\n}\n\nexport default GifList;\n","import React, { Component } from 'react';\nimport './App.css';\nimport axios from 'axios'\nimport SearchForm from './Components/SearchForm';\nimport GifList from './Components/GifList';\n\nexport default class App extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      gifs: [],\n      loading: true\n    }\n  }\n\n  componentDidMount() {\n    axios.get('http://api.giphy.com/v1/gifs/trending?api_key=dc6zaTOxFJmzC')\n      .then(response => {\n        this.setState({\n          gifs: response.data.data,\n          loading: false\n        })\n      })\n      .catch(err => {\n        console.log('Error fetching and parsing data' + err)\n      })\n  }\n\n  performSearch = (query) => {\n    axios.get(`http://api.giphy.com/v1/gifs/search?q=${query}&limit=32&api_key=dc6zaTOxFJmzC`)\n      .then(response => {\n        this.setState({\n          gifs: response.data.data\n        })\n      })\n      .catch(err => {\n        console.log('Error fetching and parsing data' + err)\n      })\n  }\n\n  render() {\n    console.log(this.state.gifs)\n    return (\n      <div>\n        <div className=\"main-header\">\n          <div className=\"inner\">\n            <h1 className=\"main-title\">GifSearch</h1>\n            <SearchForm\n              onSearch = {this.performSearch}\n            />\n          </div>\n        </div>\n        <div className=\"main-content\">\n          {\n            (this.state.loading)\n            ? <p> Loading ... </p>\n            : <GifList\n               data = {this.state.gifs}\n              />\n          }\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}